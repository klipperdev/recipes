security:
    encoders:
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern:        '^%api_base_path%'
            host:           '%api_base_host%'
            methods:        [HEAD, GET, POST, PATCH, PUT, DELETE]
            provider:       users
            form_login:     false
            form_csrf:      false
            form_permission_checker: true
            http_basic:     true
            stateless:      true
            anonymous:      true
            anonymous_role: true
            org_context:    ~
            oauth:          true

        oauth:
            pattern:        '^/oauth'
            host:           null
            methods:        [GET, POST]
            provider:       users
            form_login:     false
            form_csrf:      false
            form_permission_checker: true
            http_basic:     true
            stateless:      true
            anonymous:      true
            anonymous_role: true
            org_context:    ~

        main:
            provider:       users
            anonymous:      true
            lazy:           true
            anonymous_role: true
            locale_session: true
            org_context:    ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/oauth/authorize, roles: IS_AUTHENTICATED_REMEMBERED }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
